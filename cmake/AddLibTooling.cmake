find_package(Clang REQUIRED CONFIG)
find_package(LLVM REQUIRED CONFIG)
if (Clang_FOUND AND LLVM_FOUND)
    if(NOT "15" VERSION_EQUAL "${LLVM_VERSION_MAJOR}")
        MESSAGE(FATAL_ERROR "Found LLVM ${LLVM_VERSION_MAJOR}, but need LLVM 15")
    endif()
    list(APPEND CMAKE_MODULE_PATH "${LLVM_CMAKE_DIR}")
    MESSAGE(STATUS "CXXScanner: cmake configuration llvm(version=${LLVM_PACKAGE_VERSION}). LLVM_CMAKE_DIR=${LLVM_CMAKE_DIR}")
    list(APPEND CMAKE_MODULE_PATH "${CLANG_CMAKE_DIR}")
    MESSAGE(STATUS "CXXScanner: cmake configuration clang(CLANG_CMAKE_DIR=${CLANG_CMAKE_DIR}")
    include(AddLLVM)
    include(AddClang)
    include(LLVMConfig)
    MESSAGE(STATUS "CXXScanner: LLVM_LIBRARY_DIR=${LLVM_LIBRARY_DIR}")
    include_directories(SYSTEM "${LLVM_INCLUDE_DIRS};${CLANG_INCLUDE_DIRS}")
    link_directories(${LLVM_LIBRARY_DIR})
    add_definitions(${LLVM_DEFINITIONS})
    add_definitions(${CLANG_DEFINITIONS})

    if(NOT ${LLVM_ENABLE_RTTI})
        MESSAGE(STATUS "CXXScanner: LLVM_ENABLE_RTTI = ${LLVM_ENABLE_RTTI}, disable rtti")
        set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden")
    endif()
else()
    MESSAGE(FATAL_ERROR "Clang_FOUND = ${Clang_FOUND}, LLVM_FOUND = ${LLVM_FOUND}")
endif()
